import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Home, Users, ShieldAlert, Lightbulb } from 'lucide-react'; // Assure-toi que tu as bien importé les icônes de Lucide
import logo from './path-to-your-logo'; // Assure-toi d'importer le logo correctement
import { logout } from './path-to-your-logout-function'; // Ta fonction de déconnexion
import { useUserProfile } from './path-to-your-user-hook'; // Hook pour récupérer les informations utilisateur

const HomeAdmin: React.FC = () => {
  const [isDropdownVisible, setDropdownVisible] = useState(false);
  const [isDarkMode, setIsDarkMode] = useState(false);
  const navigate = useNavigate();
  const { etudiant, loading, error } = useUserProfile();

  const currentPath = window.location.pathname; // Récupérer l'URL actuelle

  useEffect(() => {
    const storedTheme = localStorage.getItem('theme');
    if (storedTheme === 'dark') {
      setIsDarkMode(true);
      document.documentElement.classList.add('dark');
    }
  }, []);

  const handleLogout = async () => {
    try {
      await logout();
      navigate('/login');
    } catch (error) {
      console.error("Erreur lors de la déconnexion :", error);
    }
  };

  return (
    <div className="flex-none">
      <nav className="flex justify-between items-center px-5 h-16 bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700">
        {/* Logo */}
        <div className="flex items-center space-x-2">
          <img src={logo} alt="Logo" className="h-10" />
          <span className="font-bold text-3xl tracking-wide text-[#1c3d6e] dark:text-white">
            UACEEM-CONNECT
          </span>
        </div>

        {/* Icones du menu principal */}
        <div className="flex justify-center flex-1">
          <ul className="flex space-x-20">
            {/* Icone Home */}
            <li
              className={`cursor-pointer ${currentPath === '/homeAdmin' ? 'border-b-2 border-blue-600 rounded-b-lg' : ''}`}
              onClick={() => navigate('/homeAdmin')}
            >
              <Home size={25} className={`${currentPath === '/homeAdmin' ? 'text-blue-600' : 'dark:text-white'}`} />
            </li>
            {/* Autres icônes */}
            <li className="cursor-pointer">
              <Users size={25} className="dark:text-white" />
            </li>
            <li className="cursor-pointer">
              <ShieldAlert size={25} className="dark:text-white" />
            </li>
            <li className="cursor-pointer">
              <Lightbulb size={25} className="dark:text-white" />
            </li>
          </ul>
        </div>

        {/* Barre de recherche et autres icônes */}
        <div className="flex items-center space-x-4">
          {/* Icône de recherche */}
          <div className="relative">
            <input
              type="text"
              placeholder="Rechercher..."
              className="input input-bordered dark:bg-gray-800 dark:text-white"
            />
          </div>
          
          {/* Icône utilisateur / profil */}
          <div className="relative">
            <button
              className="flex items-center space-x-2"
              onClick={() => setDropdownVisible(!isDropdownVisible)}
            >
              <img
                src={etudiant?.photo || 'default-avatar.png'}
                alt="Photo de profil"
                className="h-10 w-10 rounded-full"
              />
              <span className="text-gray-700 dark:text-white">{etudiant?.nom}</span>
            </button>

            {/* Dropdown pour le profil */}
            {isDropdownVisible && (
              <div className="absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 shadow-lg rounded-lg py-1">
                <button
                  className="block w-full px-4 py-2 text-left text-gray-700 dark:text-white hover:bg-gray-200 dark:hover:bg-gray-600"
                  onClick={handleLogout}
                >
                  Déconnexion
                </button>
              </div>
            )}
          </div>
        </div>
      </nav>
    </div>
  );
};

export default HomeAdmin;
