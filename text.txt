const jwt = require('jsonwebtoken');
const JWT_SECRET = process.env.JWT_SECRET || 'votre_secret_key';

const authenticateToken = (req, res, next) => {
  // Extraire le token depuis les cookies ou le header Authorization
  const token = req.cookies?.token || req.headers['authorization']?.split(' ')[1];

  if (!token) {
    return res.status(403).json({ message: 'Accès refusé. Aucun token fourni.' });
  }

  try {
    // Vérifier la validité du token JWT
    const user = jwt.verify(token, JWT_SECRET);
    req.user = user; // Ajouter les informations utilisateur à la requête
    next(); // Passer au middleware ou à la route suivante
  } catch (error) {
    // Envoyer un message d'erreur détaillé en cas d'échec de la vérification
    return res.status(401).json({ message: 'Token invalide ou expiré.', error: error.message });
  }
};

module.exports = authenticateToken;
