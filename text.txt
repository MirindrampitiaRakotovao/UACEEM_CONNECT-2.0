import { File as FileIcon } from 'lucide-react';

// Fonction pour vérifier si le fichier est une image
const isImage = (url: string) => {
  return /\.(jpg|jpeg|png|gif|bmp|svg)$/.test(url);
};

const PublicationList: React.FC<PublicationListProps> = ({
  publications,
  loading,
  error,
}) => {
  // ... tout le reste du code

  return (
    <div className="publication-list mt-8 ">
      {loading ? (
        <p>Chargement des publications...</p>
      ) : error ? (
        <p>{error}</p>
      ) : (
        sortedPublications.map((publication) => {
          const isLiked = likedPublications.includes(publication.id);

          return (
            <div key={publication.id} className="bg-white p-4 rounded-md shadow mb-4 p-3">
              {/* ... tout le reste du code */}
              
              {/* Gestion des fichiers */}
              <div className={`grid ${publication.fichiers.length === 1 ? 'grid-cols-1 justify-items-center' : ''}`}>
                {publication.fichiers.map((file, index) => (
                  <div key={index} className="flex items-center space-x-2">
                    {/* Vérifie si le fichier est une image ou non */}
                    {isImage(file.url_fichier) ? (
                      <img
                        src={file.url_fichier}
                        alt={`Fichier ${index + 1}`}
                        className="w-full max-w-lg h-auto object-cover rounded-2xl cursor-pointer"
                        onClick={() => openFileModal([file])}
                      />
                    ) : (
                      <div className="flex items-center">
                        <FileIcon className="w-6 h-6 text-gray-500" />
                        <span className="text-sm text-gray-500 ml-2">{`Fichier ${index + 1}`}</span>
                      </div>
                    )}
                  </div>
                ))}
              </div>
              
              {/* ... tout le reste du code */}
            </div>
          );
        })
      )}

      {selectedFiles && (
        <ModalFile isOpen={isFileModalOpen} onClose={closeFileModal} files={selectedFiles} />
      )}
    </div>
  );
};
